plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.0'
}

group 'fr.o80.game'
version '0.6'

jar {
    manifest {
        attributes 'Main-Class': 'fr.o80.soulgame.MainKt'
    }
    from {
        configurations.compileClasspath.collect {it.isDirectory() ? it : zipTree(it) }
    }
}

task prepareResources(type: Copy) {
    from file("./resources")
    into file("$buildDir/libs")
}

task release(type: Zip) {
    dependsOn "build", "prepareResources"

    from "$buildDir/libs"
    archiveFileName = "SoulGame-${project.version}.zip"
    destinationDirectory = file("$buildDir/dist")

}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.0"

    implementation project(':GameLib')

    implementation 'org.lwjgl:lwjgl:3.2.1'
    implementation 'org.lwjgl.osgi:org.lwjgl.glfw:3.2.1.2'
    implementation 'org.lwjgl.osgi:org.lwjgl.opengl:3.2.1.2'
    implementation 'org.lwjgl.osgi:org.lwjgl.stb:3.2.1.2'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
