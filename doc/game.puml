@startuml

class GameExtension {
    + interceptCommand(command)
}

class Game {
    + start()
    + onActionA(p0, p1)
    + onActionB(p0, p1, p2)
}

class Scene {
    - sceneState
    + open(keyPipeline)
    + close()
    + update()
    + render()
}

class GameLoop {
    + start()
    - currentScene
    ==
    + open(scene)
    - loop()
    - render()
    - tick()
}

class SceneManager {
    + start()
    + openSceneA()
    + openSceneB(p0, p1)
    + openSceneC(p2)
}

class SceneSystem {
    + update(sceneState): SceneState
    + open(keyPipeline)
}

class SceneRenderer {
    + render(sceneState)
    + open()
    + close()
}

class SceneResources {
    + open()
    + close()
    ..
    + getEntityUnits()
    - loadTextures()
}

GameExtension --> Game

Game -> SceneManager
Game -> GameLoop

GameLoop .> Scene

SceneManager ..> GameLoop
SceneManager "1" -* "*" Scene

Scene ...> SceneManager
Scene ---> SceneSystem
Scene ---> SceneRenderer
Scene --> SceneResources

SceneSystem ..> SceneResources
SceneRenderer ..> SceneResources

@enduml